The system is: Windows - 10.0.22621 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Professional/VC/Tools/MSVC/14.37.32822/bin/HostX64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.37.32822 版
版权所有(C) Microsoft Corporation。保留所有权利。

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.37.32822.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "D:/Qt/workplace/LogPlugin/CMakeFiles/3.24.2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Professional/VC/Tools/MSVC/14.37.32822/bin/HostX64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.37.32822 版
版权所有(C) Microsoft Corporation。保留所有权利。

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.37.32822.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "D:/Qt/workplace/LogPlugin/CMakeFiles/3.24.2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: D:/Qt/workplace/LogPlugin/CMakeFiles/CMakeTmp

Run Build Command(s):jom -f Makefile /nologo cmTC_97c8a\fast && jom: parallel job execution disabled for Makefile
	D:\Qt\qtcreator-7.0.2\bin\jom\jom.exe  -f CMakeFiles\cmTC_97c8a.dir\build.make /nologo -L CMakeFiles\cmTC_97c8a.dir\build
Building C object CMakeFiles/cmTC_97c8a.dir/CMakeCCompilerABI.c.obj
	D:\Qt\Qt6.4.3\Tools\CMake_64\bin\cmake.exe -E cmake_cl_compile_depends --dep-file=CMakeFiles\cmTC_97c8a.dir\CMakeCCompilerABI.c.obj.d --working-dir=D:\Qt\workplace\LogPlugin\CMakeFiles\CMakeTmp --filter-prefix="扅鶓??: ???畱??劘?  " -- C:\PROGRA~1\MICROS~3\2022\PROFES~1\VC\Tools\MSVC\1437~1.328\bin\HostX64\x64\cl.exe @C:\Users\NINGMEI\AppData\Local\Temp\CMakeCCompilerABI.c.obj.9364.0.jom
CMakeCCompilerABI.c
?鈷? 鍖呭惈鏂囦欢:  D:\Qt\Qt6.4.3\Tools\CMake_64\share\cmake-3.24\Modules\CMakeCompilerABI.h
Linking C executable cmTC_97c8a.exe
	D:\Qt\Qt6.4.3\Tools\CMake_64\bin\cmake.exe -E vs_link_exe --intdir=CMakeFiles\cmTC_97c8a.dir --rc=C:\PROGRA~2\WI3CF2~1\10\bin\100203~1.0\x64\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\10\bin\100203~1.0\x64\mt.exe --manifests -- C:\PROGRA~1\MICROS~3\2022\PROFES~1\VC\Tools\MSVC\1437~1.328\bin\Hostx64\x64\link.exe /nologo @CMakeFiles\cmTC_97c8a.dir\objects1.rsp @C:\Users\NINGMEI\AppData\Local\Temp\cmTC_97c8a.exe.9364.78.jom



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: D:/Qt/workplace/LogPlugin/CMakeFiles/CMakeTmp

Run Build Command(s):jom -f Makefile /nologo cmTC_3b6e4\fast && jom: parallel job execution disabled for Makefile
	D:\Qt\qtcreator-7.0.2\bin\jom\jom.exe  -f CMakeFiles\cmTC_3b6e4.dir\build.make /nologo -L CMakeFiles\cmTC_3b6e4.dir\build
Building CXX object CMakeFiles/cmTC_3b6e4.dir/CMakeCXXCompilerABI.cpp.obj
	D:\Qt\Qt6.4.3\Tools\CMake_64\bin\cmake.exe -E cmake_cl_compile_depends --dep-file=CMakeFiles\cmTC_3b6e4.dir\CMakeCXXCompilerABI.cpp.obj.d --working-dir=D:\Qt\workplace\LogPlugin\CMakeFiles\CMakeTmp --filter-prefix="扅鶓??: ???畱??劘?  " -- C:\PROGRA~1\MICROS~3\2022\PROFES~1\VC\Tools\MSVC\1437~1.328\bin\HostX64\x64\cl.exe @C:\Users\NINGMEI\AppData\Local\Temp\CMakeCXXCompilerABI.cpp.obj.14212.16.jom
CMakeCXXCompilerABI.cpp
?鈷? 鍖呭惈鏂囦欢:  D:\Qt\Qt6.4.3\Tools\CMake_64\share\cmake-3.24\Modules\CMakeCompilerABI.h
Linking CXX executable cmTC_3b6e4.exe
	D:\Qt\Qt6.4.3\Tools\CMake_64\bin\cmake.exe -E vs_link_exe --intdir=CMakeFiles\cmTC_3b6e4.dir --rc=C:\PROGRA~2\WI3CF2~1\10\bin\100203~1.0\x64\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\10\bin\100203~1.0\x64\mt.exe --manifests -- C:\PROGRA~1\MICROS~3\2022\PROFES~1\VC\Tools\MSVC\1437~1.328\bin\Hostx64\x64\link.exe /nologo @CMakeFiles\cmTC_3b6e4.dir\objects1.rsp @C:\Users\NINGMEI\AppData\Local\Temp\cmTC_3b6e4.exe.14212.94.jom



Performing C++ SOURCE FILE Test HAVE_STDATOMIC succeeded with the following output:
Change Dir: D:/Qt/workplace/LogPlugin/CMakeFiles/CMakeTmp

Run Build Command(s):jom -f Makefile /nologo cmTC_07742\fast && jom: parallel job execution disabled for Makefile
	D:\Qt\qtcreator-7.0.2\bin\jom\jom.exe  -f CMakeFiles\cmTC_07742.dir\build.make /nologo -L CMakeFiles\cmTC_07742.dir\build
Building CXX object CMakeFiles/cmTC_07742.dir/src.cxx.obj
	D:\Qt\Qt6.4.3\Tools\CMake_64\bin\cmake.exe -E cmake_cl_compile_depends --dep-file=CMakeFiles\cmTC_07742.dir\src.cxx.obj.d --working-dir=D:\Qt\workplace\LogPlugin\CMakeFiles\CMakeTmp --filter-prefix="扅鶓??: ???畱??劘?  " -- C:\PROGRA~1\MICROS~3\2022\PROFES~1\VC\Tools\MSVC\1437~1.328\bin\HostX64\x64\cl.exe @C:\Users\NINGMEI\AppData\Local\Temp\src.cxx.obj.3244.16.jom
src.cxx
?鈷? 鍖呭惈鏂囦欢:  C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\atomic
?鈷? 鍖呭惈鏂囦欢:   C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\yvals.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\yvals_core.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\vcruntime.h
?鈷? 鍖呭惈鏂囦欢:      C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\sal.h
?鈷? 鍖呭惈鏂囦欢:       C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\concurrencysal.h
?鈷? 鍖呭惈鏂囦欢:      C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\vadefs.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\xkeycheck.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\crtdbg.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\corecrt.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\vcruntime_new_debug.h
?鈷? 鍖呭惈鏂囦欢:      C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\vcruntime_new.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\crtdefs.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\use_ansi.h
?鈷? 鍖呭惈鏂囦欢:   C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\cstddef
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\stddef.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\xtr1common
?鈷? 鍖呭惈鏂囦欢:   C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\cstdint
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\stdint.h
?鈷? 鍖呭惈鏂囦欢:   C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\cstring
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\string.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\corecrt_memory.h
?鈷? 鍖呭惈鏂囦欢:      C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\corecrt_memcpy_s.h
?鈷? 鍖呭惈鏂囦欢:       C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\errno.h
?鈷? 鍖呭惈鏂囦欢:       C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\vcruntime_string.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\corecrt_wstring.h
?鈷? 鍖呭惈鏂囦欢:   C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\xatomic.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\type_traits
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\intrin0.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\intrin0.inl.h
?鈷? 鍖呭惈鏂囦欢:   C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\xthreads.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\climits
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\limits.h
?鈷? 鍖呭惈鏂囦欢:    C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\xtimec.h
?鈷? 鍖呭惈鏂囦欢:     C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.37.32822\include\ctime
?鈷? 鍖呭惈鏂囦欢:      C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\time.h
?鈷? 鍖呭惈鏂囦欢:       C:\Program Files (x86)\Windows Kits\10\include\10.0.20348.0\ucrt\corecrt_wtime.h
D:\Qt\workplace\LogPlugin\CMakeFiles\CMakeTmp\src.cxx(17): warning C4312: 鈥滅被鍨嬪己鍒惰浆鎹⑩€? 浠庘€渦nsigned int鈥濊浆鎹㈠埌鏇村ぇ鐨勨€渧oid *鈥?Linking CXX executable cmTC_07742.exe
	D:\Qt\Qt6.4.3\Tools\CMake_64\bin\cmake.exe -E vs_link_exe --intdir=CMakeFiles\cmTC_07742.dir --rc=C:\PROGRA~2\WI3CF2~1\10\bin\100203~1.0\x64\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\10\bin\100203~1.0\x64\mt.exe --manifests -- C:\PROGRA~1\MICROS~3\2022\PROFES~1\VC\Tools\MSVC\1437~1.328\bin\Hostx64\x64\link.exe /nologo @CMakeFiles\cmTC_07742.dir\objects1.rsp @C:\Users\NINGMEI\AppData\Local\Temp\cmTC_07742.exe.3244.109.jom


Source file was:
#include <atomic>
#include <cstdint>

void test(volatile std::atomic<std::int64_t> &a)
{
    std::int64_t v = a.load(std::memory_order_acquire);
    while (!a.compare_exchange_strong(v, v + 1,
                                      std::memory_order_acq_rel,
                                      std::memory_order_acquire)) {
        v = a.exchange(v - 1);
    }
    a.store(v + 1, std::memory_order_release);
}

int main(int, char **)
{
    void *ptr = (void*)0xffffffc0; // any random pointer
    test(*reinterpret_cast<std::atomic<std::int64_t> *>(ptr));
    return 0;
}
